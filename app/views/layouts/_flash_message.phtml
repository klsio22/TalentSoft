<?php foreach (\Lib\FlashMessage::get() as $type => $msg) : ?>
<div class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 max-w-md w-full px-4">
  <div
    class="flash-message <?= $type ?> rounded-lg shadow-lg p-4 text-white <?= $type === 'success' ? 'bg-green-500' : ($type === 'danger' ? 'bg-red-500' : ($type === 'warning' ? 'bg-yellow-500' : 'bg-blue-500')) ?> auto-fade"
    role="alert" aria-live="assertive" aria-atomic="true">
    <div class="flex items-center justify-between">
      <div class="flex items-center">
        <span class="mr-2">
          <?php if ($type === 'success'): ?>
          <i class="fas fa-check-circle"></i>
          <?php elseif ($type === 'danger'): ?>
          <i class="fas fa-exclamation-triangle"></i>
          <?php elseif ($type === 'warning'): ?>
          <i class="fas fa-exclamation-circle"></i>
          <?php else: ?>
          <i class="fas fa-info-circle"></i>
          <?php endif; ?>
        </span>
        <span>
          <?= $msg ?>
        </span>
      </div>
      <button type="button" class="ml-4 text-white hover:text-gray-200 focus:outline-none close-flash"
        aria-label="Fechar">
        <i class="fas fa-times"></i>
      </button>
    </div>
  </div>
</div>
<?php endforeach; ?>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const flashMessages = document.querySelectorAll('.flash-message');

    flashMessages.forEach(messageEl => {
      // Auto-fade após 5 segundos
      setTimeout(() => {
        fadeOutMessage(messageEl);
      }, 5000);

      // Fechar ao clicar no botão X
      const closeBtn = messageEl.querySelector('.close-flash');
      if (closeBtn) {
        closeBtn.addEventListener('click', () => {
          fadeOutMessage(messageEl);
        });
      }
    });

    function fadeOutMessage(messageEl) {
      messageEl.style.opacity = '0';
      messageEl.style.transform = 'translateY(-20px)';
      messageEl.style.transition = 'all 0.3s ease';

      setTimeout(() => {
        if (messageEl.parentNode) {
          messageEl.parentNode.removeChild(messageEl);
        }

        // Disparar evento personalizado
        document.dispatchEvent(new CustomEvent('flashMessageHidden'));
      }, 300);
    }
  });
</script>